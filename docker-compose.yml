version: '3.8'

services:
  postgres_db:
    # ... (dados existentes)
    image: postgres:16-alpine
    container_name: meu_postgres_dev
    environment:
      # ... (suas vari√°veis)
      POSTGRES_DB: Carteira-Digital-db
    ports:
      - "5432:5432"
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data

    # üö® NOVO: HEALTHCHECK para garantir que o DB est√° pronto
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root"] # Testa a conex√£o usando o usu√°rio 'root'
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s # Espera 10s antes de come√ßar a checar 
  # -------------------------------------------------------------------
  # NOVO SERVI√áO: SUA APLICA√á√ÉO NESTJS
  # -------------------------------------------------------------------
  app:
    # 1. Diz ao Docker Compose para CONSTRUIR a imagem
    #    usando o Dockerfile que est√° no diret√≥rio atual.
    build: 
      context: . 
      dockerfile: Dockerfile

    # 2. Define um nome fixo
    container_name: carteira_digital_app

    # 3. Mapeamento de Portas: exp√µe a porta 3000 do cont√™iner para a 8080 da sua m√°quina local.
    ports:
      - "8080:3000" 

    # 4. Vari√°veis de Ambiente
    environment:
      # O HOSTNAME DEVE SER O NOME DO SERVI√áO: 'postgres_db'
      # Isso garante que sua aplica√ß√£o consiga se conectar ao banco de dados.
      # AJUSTE: Voc√™ pode precisar de vari√°veis adicionais como POSTGRES_USER e POSTGRES_PASSWORD
      DATABASE_URL: postgres://root:root@postgres_db:5432/Carteira-Digital-db
      # Voc√™ pode adicionar mais vari√°veis do seu arquivo .env aqui, por exemplo:
      # JWT_SECRET: ${JWT_SECRET} 
      
    # 5. Depend√™ncias: Garante que o DB inicie antes da aplica√ß√£o.
    # O 'service_healthy' √© bom se voc√™ configurar o HEALTHCHECK no DB,
    # mas 'service_started' geralmente √© suficiente para o NestJS.
    depends_on:
      postgres_db:
        condition: service_healthy 

    # 6. Rein√≠cio:
    restart: unless-stopped

    command: sh -c "npx prisma migrate deploy && npm run start:prod"

# Define os volumes que o Docker deve gerenciar (para persist√™ncia de dados).
volumes:
  postgres_data: